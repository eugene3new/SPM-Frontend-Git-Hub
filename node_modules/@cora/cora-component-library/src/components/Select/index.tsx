import React from "react";
import { Form } from "react-bootstrap";
import { v4 as createUniqueKey } from "uuid";
import { IFormField } from "../Common/Interfaces/IFormField";

export type selectOption = {
  text: string;
  value: string;
};

export interface ISelectProps extends IFormField {
  disabled?: boolean;
  options: selectOption[];
  value?: string;
  onChange?: React.FormEventHandler<HTMLSelectElement>;
}

export const Select: React.FC<ISelectProps> = ({
  id,
  label,
  name,
  disabled,
  options,
  helpText,
  validation,
  value,
  onChange,
}) => {
  return (
    <Form.Group id={id} className="mb-3">
      <Form.Label>{label}</Form.Label>
      <Form.Select
        name={name}
        disabled={disabled}
        isValid={validation ? validation.isValid : false}
        isInvalid={validation ? validation.isInvalid : false}
        aria-label={label}
        value={value}
        onChange={onChange}
      >
        {options.map((option) => {
          return (
            <option key={createUniqueKey()} value={option.value}>
              {option.text}
            </option>
          );
        })}
      </Form.Select>
      {validation && (
        <Form.Control.Feedback
          type={validation.isInvalid ? "invalid" : "valid"}
        >
          {validation.validationMessage}
        </Form.Control.Feedback>
      )}
      {helpText && <Form.Text className="text-muted">{helpText}</Form.Text>}
    </Form.Group>
  );
};

export default Select;
