import React, { ReactNode } from "react";
import styled from "styled-components";
import { StopwatchIcon, CheckIcon, SyncIcon } from "@primer/octicons-react";
import { ButtonLink } from "../Buttons/ButtonLink";
import { Dropdown } from "../Dropdown";

export interface INotificationCardProps {
  headerText: string;
  bodyText: string;
  cardType: "calander" | "data" | "approval";
  detailsButtonText: string;
  detailsButtonOnClick: () => void;
  snoozeButtonText: string;
  deteteButtonText: string;
  deleteButtonOnClick: () => void;
}

const NCardContainer = styled.div`
  width: 100%;
  height: 160px;
  display: flex;
  box-shadow: var(--cora-box-shadow);
  padding: 20px 20px 10px 20px;
  position: relative;
`;

const NCardSettings = styled.div`
  position: absolute;
  top: 0;
  right: 0;
`;

const NCardIconContainer = styled.div`
  height: 100%;
  display: flex;
  justify-content: center;
`;

const NCardIcon = styled.div<{ color: string }>`
  width: 60px;
  height: 60px;
  border-radius: 50%;
  background-color: var(--cora-${({ color }) => color});
  color: var(--cora-white);
  display: flex;
  align-items: center;
  justify-content: center;
`;

const NCardContainerContent = styled.div`
  width: calc(100% - 80px);
  margin-left: 20px;
  height: 100%;
  display: flex;
  flex-direction: column;
`;

const NCardContentRow = styled.div`
  width: 100%;
  margin-bottom: 5px;
`;

const NCardHeader = styled(NCardContentRow)`
  font-weight: var(--cora-bolder);
`;

const NCardBody = styled(NCardContentRow)`
  height: 40%;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
`;

const NCardFooter = styled(NCardContentRow)`
  height: 30%;
  display: flex;
  justify-content: flex-end;
`;

const getIcon = (cardType: string) => {
  switch (cardType) {
    case "calander":
      return (
        <NCardIcon color="purple">
          <StopwatchIcon size={35} />
        </NCardIcon>
      );
    case "data":
      return (
        <NCardIcon color="green">
          <SyncIcon size={35} />
        </NCardIcon>
      );
    case "approval":
      return (
        <NCardIcon color="red">
          <CheckIcon size={40} />
        </NCardIcon>
      );
  }
};

export const NotificationCard: React.FC<INotificationCardProps> = ({
  cardType,
  headerText,
  bodyText,
  detailsButtonText,
  detailsButtonOnClick,
  snoozeButtonText,
  deteteButtonText,
  deleteButtonOnClick,
}) => {
  const snoozeListItems = [
    { text: "1 Day", onClick: () => alert("Item 1 Clicked"), key: "1" },
    { text: "2 Days", onClick: () => alert("Item 2 Clicked"), key: "2" },
    { text: "3 Days", onClick: () => alert("Item 3 Clicked"), key: "3" },
  ];

  const settingMenuListItems = [
    {
      text: "View Related for Project",
      onClick: () => alert("Item 1 Clicked"),
      key: "1",
    },
    {
      text: "Get Project Notifications",
      onClick: () => alert("Item 2 Clicked"),
      key: "3",
    },
  ];

  return (
    <NCardContainer>
      <NCardSettings>
        <Dropdown
          color="transparent"
          label="Settings Menu"
          type="ellipsis"
          listItems={settingMenuListItems}
        />
      </NCardSettings>
      <NCardIconContainer>{getIcon(cardType)}</NCardIconContainer>
      <NCardContainerContent>
        <NCardHeader>{headerText}</NCardHeader>
        <NCardBody title={bodyText}>{bodyText}</NCardBody>
        <NCardFooter>
          <ButtonLink onClick={detailsButtonOnClick}>
            {detailsButtonText}
          </ButtonLink>
          <Dropdown
            type="square"
            label={snoozeButtonText}
            listItems={snoozeListItems}
            color="transparent"
          ></Dropdown>
          <ButtonLink onClick={deleteButtonOnClick}>
            {deteteButtonText}
          </ButtonLink>
        </NCardFooter>
      </NCardContainerContent>
    </NCardContainer>
  );
};

export default NotificationCard;
