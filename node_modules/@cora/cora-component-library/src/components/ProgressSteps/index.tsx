import React, { FC } from "react";
import styled from "styled-components";
import { CheckIcon } from "@primer/octicons-react";

export type ProgressStep = {
  label: string;
  isComplete: boolean;
  href: string;
  onClick: (e: number) => void;
};

export interface ProgressStepsProps {
  steps: ProgressStep[];
  selectedIndex?: number;
}

const StepsWrapper = styled.div`
  display: flex;
`;

const Step = styled.div`
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  align-items: center;
  width: 180px;
  position: relative;
  padding: 0 20px;
`;

const StepIcon = styled.div<{ selected: Boolean }>`
  width: 30px;
  height: 30px;
  background: var(--cora-orange);
  font-weight: 600;
  border-radius: 50%;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  ${(props) => props.selected && { border: "2px solid var(--cora-green)" }};
  cursor: pointer;
`;

const StepLabel = styled.div<{ selected: Boolean }>`
  text-align: center;
  color: var(--cora-green);
  ${(props) => props.selected && { textDecoration: "underline" }};
  cursor: pointer;
`;

const StepLine = styled.div`
  position: absolute;
  top: 13px;
  right: 50%;
  height: 1px;
  width: 100%;
  background-color: var(--cora-orange);
`;

export const ProgressSteps: FC<ProgressStepsProps> = ({
  steps,
  selectedIndex,
}: ProgressStepsProps) => {
  return (
    <StepsWrapper>
      {steps.map((step, index) => {
        return (
          <Step key={index} onClick={() => step.onClick(index)}>
            <StepIcon selected={selectedIndex === index}>
              {step.isComplete && <CheckIcon size={26} />}
            </StepIcon>
            {index > 0 && <StepLine />}
            <StepLabel selected={selectedIndex === index}>
              {step.label}
            </StepLabel>
          </Step>
        );
      })}
    </StepsWrapper>
  );
};
export default ProgressSteps;
