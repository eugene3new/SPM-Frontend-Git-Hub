import React, { FC } from "react";
import { Card as RBCard } from "react-bootstrap";
import styled from "styled-components";
import Progress from "../Progress";
import { Dropdown } from "../Dropdown";
import { ListItem } from "../Dropdown/listItem";
import { ButtonLink } from "../..";

type cardIcon = {
  imageURL: string;
  color: "orange" | "green" | "purple" | "blue";
};

export interface CardProps {
  title: string;
  description: string;
  background: cardIcon;
  percentage: number;
  onEdit: () => void;
  listItems: ListItem[];
}

const CoraCard = styled.div`
  box-shadow: var(--cora-box-shadow);

  .card-body {
    padding-top: 60px;

    .card-text {
      color: #767676;
    }
  }
`;

const CardHeader = styled.div<{ color: string; url: string }>`
  background-color: var(--cora-${({ color }) => color}-very-light);
  background-image: url("${({ url }) => url}");
  height: 125px;
  position: relative;
  background-repeat: no-repeat;
  background-position: center;

  .cora-dropdown {
    display: flex;
    justify-content: flex-end;
  }

  .cora-progress {
    position: absolute;
    bottom: -50px;
  }
`;

const ButtonContainer = styled.div`
  display: flex;
  justify-content: flex-end;
`;
export const Card: FC<CardProps> = ({
  title,
  description,
  background,
  percentage,
  onEdit,
  listItems,
}: CardProps) => {
  return (
    <CoraCard>
      <RBCard>
        <CardHeader
          color={background.color}
          url={background.imageURL}
          className="card-header"
        >
          <Dropdown
            label={`${title} menu`}
            type="ellipsis"
            color="transparent"
            listItems={listItems}
          />
          <Progress
            color="green"
            percentage={percentage}
            label="Complete"
            size={90}
          />
        </CardHeader>
        <RBCard.Body>
          <RBCard.Title>{title}</RBCard.Title>
          <RBCard.Text>{description}</RBCard.Text>
          <ButtonContainer>
            <ButtonLink onClick={onEdit}>EDIT</ButtonLink>
          </ButtonContainer>
        </RBCard.Body>
      </RBCard>
    </CoraCard>
  );
};

export default Card;
